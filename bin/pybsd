#!/usr/bin/env python3
import argparse
import asyncio
import logging
from configparser import ConfigParser
from itertools import chain

from PyBS import PyBSdaemon, RpcServer


def main():
    # parser
    parser = argparse.ArgumentParser(description='PyBS daemon')
    parser.add_argument('-c', '--config', help='config file', default='/etc/pybs.conf')
    args = parser.parse_args()

    # read config
    config_parser = ConfigParser()
    with open(args.config, 'r') as lines:
        lines = chain(("[pybs]",), lines)
        config_parser.read_file(lines)
    config = config_parser['pybs']

    # set up logger
    logging.basicConfig(level=logging.DEBUG)
    log = logging.getLogger(__name__)

    # get asyncio event loop
    loop = asyncio.get_event_loop()

    try:
        # create PyBS daemon and open it
        log.info('Starting PyBS daemon...')
        daemon = PyBSdaemon(
            db_connect=config.get('database', 'sqlite:///var/run/pybs.sqlite3'),
            ncores=int(config.get('ncores', 4)),
            root_dir=config.get('root', '/')
        )
        loop.run_until_complete(daemon.open())

        # run until interrupt
        loop.run_forever()

    except KeyboardInterrupt:
        log.info('Shutting down...')

    finally:
        # close PyBS daemon
        loop.run_until_complete(daemon.close())


if __name__ == '__main__':
    main()
